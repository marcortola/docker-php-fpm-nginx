user $USER;
worker_processes $NGINX_WORKER_PROCESSES;
worker_rlimit_nofile 8192;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections $NGINX_WORKER_CONNECTIONS;
    multi_accept on;
}

http {
    map $host $default_fastcgi_pass {
      default "unix:/var/run/php/php-fpm.sock";
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    log_format    main '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status  $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';

    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;

    keepalive_timeout $NGINX_KEEPALIVE_TIMEOUT;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_types text/plain text/css application/json
               text/javascript application/javascript application/x-javascript
               text/xml application/xml application/xml+rss image/svg+xml
               application/vnd.ms-fontobject application/x-font-ttf font/opentype;

    include /etc/nginx/servers/*.conf;

    server {
        listen 80 default_server;
        listen [::]:80;

        # HSTS Protection
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-XSS-Protection "1; mode=block; report=/xss/report" always;
        add_header X-Content-Type-Options "nosniff" always;

        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        include  /etc/nginx/server-default/*.conf;

        location ~ ^/healthcheck-ping$ {
            allow 127.0.0.1;
            deny all;
            access_log off;
            include /etc/nginx/fastcgi_params;
            fastcgi_read_timeout 5s;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass $default_fastcgi_pass;
        }
    }
}
